DROP TABLE IF EXISTS TERMINAL.TIPO_DOCUMENTO;

CREATE TABLE TIPO_DOCUMENTO (
  ID INTEGER CONSTRAINT TIPO_DOCUMENTO_PK_ID PRIMARY KEY,
  DESCRICAO VARCHAR(50) CONSTRAINT TIPO_DOCUMENTO_NN_DESCRICAO NOT NULL,
  ATIVO BOOL CONSTRAINT TIPO_DOCUMENTO_FL_ATIVO NOT NULL
);

DROP TABLE IF EXISTS TERMINAL.USUARIO;

CREATE TABLE USUARIO(
  ID INTEGER CONSTRAINT USUARIO_PK_ID PRIMARY KEY,
  SENHA VARCHAR(50) CONSTRAINT USUARIO_NN_SENHA,
  NOME VARCHAR(50) CONSTRAINT USUARIO_NN_NOME NOT NULL,
  ID_TIPO_DOCUMENTO INTEGER CONSTRAINT USUARIO_FK_ID_TIPO_DOCUMENTO NOT NULL,
  DOCUMENTO VARCHAR(50) CONSTRAINT USUARIO_NN_DOCUMENTO NOT NULL,
  ATIVO BOOL CONSTRAINT USUARIO_FL_ATIVO NOT NULL,
  FOREIGN KEY ( ID_TIPO_DOCUMENTO)  REFERENCES TIPO_DOCUMENTO(ID)
);

DROP TABLE IF EXISTS TERMINAL.CONFIGURACAO;

CREATE TABLE CONFIGURACAO(
  ID INTEGER CONSTRAINT CONFIGURACAO_PK_ID PRIMARY KEY,
  TIPO VARCHAR(10) CONSTRAINT CONFIGURACAO_NN_TIPO NOT NULL,
  NOME VARCHAR(50) CONSTRAINT CONFIGURACAO_NN_NOME NOT NULL,
  VALOR VARCHAR(50) CONSTRAINT CONFIGURACAO_NN_VALOR NOT NULL,
  ATIVO BOOL CONSTRAINT CONFIGURACAO_NN_ATIVO NOT NULL
);

DROP TABLE IF EXISTS TERMINAL.LOGIN;

CREATE TABLE LOGIN(
  ID INTEGER CONSTRAINT LOGIN_PK_ID PRIMARY KEY,
  ID_USUARIO INTEGER CONSTRAINT LOGIN_FK_ID_USUARIO,
  DATA_LOGIN DATETIME CONSTRAINT LOGIN_NN_DATA_LOGIN NOT NULL,
  DATA_LOGIN_ON_LINE DATETIME CONSTRAINT LOGIN_NN_DATA_LOGIN_ON_LINE NULL,
  DATA_LOGOUT DATETIME CONSTRAINT LOGIN_NN_DATA_LOGOUT NULL,
  ATIVO BOOL CONSTRAINT LOGIN_FL_ATIVO NOT NULL,
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID)
);

DROP TABLE IF EXISTS TERMINAL.CERTIFICADO;

CREATE TABLE CERTIFICADO (
  ID INTEGER CONSTRAINT CERTIFICADO_PK_ID PRIMARY KEY NOT NULL,
  SUBJECT VARCHAR(50) CONSTRAINT CERTIFICADO_NN_SUBJECT NOT NULL,
  ID_EMISSOR INTEGER CONSTRAINT CERTIFICADO_FK_ID_EMISSOR,
  SERIAL VARCHAR(50) CONSTRAINT CERTIFICADO_NN_SERIAL NOT NULL,
  CERTIFICADO BLOB CONSTRAINT CERTIFICADO_NN_CERTIFICADO NOT NULL,
  ATIVO BOOL CONSTRAINT CERTIFICADO_FL_ATIVO NOT NULL,
  FOREIGN KEY (ID_EMISSOR) REFERENCES EMISSOR (ID)
);

DROP TABLE IF EXISTS TERMINAL.RESSALVA;

CREATE TABLE RESSALVA (
	ID INTEGER CONSTRAINT RESSALVA_PK_ID PRIMARY KEY NOT NULL,
	ID_EMPRESA INTEGER CONSTRAINT RESSALVA_FK_ID_EMPRESA NOT NULL,
	TIPO INTEGER CONSTRAINT RESSALVA_FK_TIPO NOT NULL,
	MENSAGEM VARCHAR(100) CONSTRAINT RESSALVA_NN_MENSAGEM NOT NULL,
	ATIVO BOOL CONSTRAINT RESSALVA_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID)
);

DROP TABLE IF EXISTS TERMINAL.RESSALVA_PRODUTO;

CREATE TABLE RESSALVA_PRODUTO (
	ID INTEGER CONSTRAINT RESSALVA_PRODUTO_PK_ID PRIMARY KEY NOT NULL,
	ID_PRODUTO INTEGER CONSTRAINT RESSALVA_RODUTO_FK_ID_PRODUTO NOT NULL,
	ID_RESSALVA INTEGER CONSTRAINT RESSALVA_PRODUTO_FK_ID_RESSALVA NOT NULL,
	QUANTIDADE INTEGER CONSTRAINT RESSALVA_PRODUTO_NN_QUANTIDADE NOT NULL,
	ATIVO BOOL CONSTRAINT RESSALVA_PRODUTO_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_RESSALVA) REFERENCES RESSALVA (ID),
	FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO (ID)
);

DROP TABLE IF EXISTS TERMINAL.RESSALVA_OPERACAO_EVENTO;

CREATE TABLE RESSALVA_OPERACAO_EVENTO(
	ID INTEGER CONSTRAINT RESSALVA_OPERACAO_EVENTO_PK_ID PRIMARY KEY NOT NULL,
	ID_OPERACAO_EVENTO INTEGER CONSTRAINT RESSALVA_OPERACAO_EVENTO_FK_ID_OPERACAO_EVENTO NOT NULL,
	ID_RESSALVA_PRODUTO INTEGER CONSTRAINT RESSALVA_OPERACAO_EVENTO_FK_ID_RESSALVA_PRODUTO,
	ID_RESSALVA INTEGER CONSTRAINT RESSALVA_OPERACAO_EVENTO_FK_ID_RESSALVA,
	ATIVO BOOL CONSTRAINT RESSALVA_OPERACAO_EVENTO_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_OPERACAO_EVENTO) REFERENCES OPERACAO_EVENTO (ID),
	FOREIGN KEY (ID_RESSALVA) REFERENCES RESSALVA (ID),
	FOREIGN KEY (ID_RESSALVA_PRODUTO) REFERENCES RESSALVA_PRODUTO (ID)	
);

DROP TABLE IF EXISTS TERMINAL.OBSERVACAO;

CREATE TABLE OBSERVACAO (
	ID INTEGER CONSTRAINT OBSERVACAO_PK_ID PRIMARY KEY NOT NULL,
	ID_OPERACAO INTEGER CONSTRAINT OBSERVACAO_FK_ID_OPERACAO NOT NULL,
	MENSAGEM VARCHAR(100) CONSTRAINT OBSERVACAO_NN_MENSAGEM NOT NULL,
	ATIVO BOOL CONSTRAINT OBSERVACAO_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_OPERACAO) REFERENCES OPERACAO (ID)
);

DROP TABLE IF EXISTS TERMINAL.MENSAGENS;

CREATE TABLE MENSAGENS (
  ID INTEGER CONSTRAINT MENSAGENS_PK_ID PRIMARY KEY NOT NULL,
  ID_PORTAL INTEGER CONSTRAINT MENSAGENS_NN_ID_PORTAL NOT NULL,
  ID_MENSAGEM_PAI INTEGER CONSTRAINT MENSAGENS_NN_ID_MENSAGEM_PAI,
  ID_USUARIO INTEGER CONSTRAINT MENSAGENS_FK_ID_USUARIO,
  ID_EMPRESA INTEGER CONSTRAINT MENSAGENS_FK_ID_EMPRESA,
  DATA_ENVIO DATETIME CONSTRAINT MESSAGEM_NN_DATA_ENVIO NOT NULL,
  DATA_LEITURA DATETIME CONSTRAINT MESSAGEM_NN_DATA_LEITURA NOT NULL,
  RECEBIDA BOOL CONSTRAINT MENSAGENS_NN_RECEBIDA NOT NULL,
  ASSUNTO VARCHAR(50) CONSTRAINT MENSAGENS_NN_ASSUNTO NOT NULL,
  MENSAGEM VARCHAR(300) CONSTRAINT MENSAGENS_NN_MESSAGEM NOT NULL,
  ATIVO BOOL CONSTRAINT MENSAGENS_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID),
  FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID)
);

DROP TABLE IF EXISTS TERMINAL.OPERACAO;

CREATE TABLE OPERACAO (
  ID INTEGER CONSTRAINT OPERACAO_PK_ID PRIMARY KEY NOT NULL,
  ID_DOCUMENTO_TRANSPORTE INTEGER OPERACAO_FK_ID_DOCUMENTO_TRANSPORTE NOT NULL,
  ID_STATUS_OPERACAO INTEGER CONSTRAINT OPERACAO_FK_ID_STATUS_OPERACAO NOT NULL,
  ID_EMPRESA INTEGER CONSTRAINT OPERACAO_FK_ID_EMPRESA NOT NULL,
  DATA_OPERACAO DATETIME CONSTRAINT OPERACAO_NN_DATA_OPERACAO NOT NULL,
  OPERACAO VARCHAR(50) CONSTRAINT OPERACAO_NN_OPERACAO NOT NULL,
  ATIVO BOOL CONSTRAINT OPERACAO_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_DOCUMENTO_TRANSPORTE) REFERENCES DOCUMENTO_TRANSPORTE(ID),
  FOREIGN KEY (ID_STATUS_OPERACAO) REFERENCES STATUS_OPERACAO (ID),
  FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA(ID)
);

DROP TABLE IF EXISTS TERMINAL.STATUS;

CREATE TABLE STATUS_OPERACAO (
  ID INTEGER CONSTRAINT STATUS_OPERACAO_PK_ID PRIMARY KEY NOT NULL,
  DESCRICAO VARCHAR(50) CONSTRAINT STATUS_OPERACAO_NN_NOME NOT NULL,
  ATIVO BOOL CONSTRAINT STATUS_OPERACAO_NN_ATIVO NOT NULL
);

DROP TABLE IF EXISTS TERMINAL.EMPRESA_ENDERECO;

CREATE TABLE EMPRESA_ENDERECO (
	ID INTEGER CONSTRAINT EMPRESA_ENDERECO_PK_ID PRIMARY KEY NOT NULL,
	ID_EMPRESA INTEGER CONSTRAINT EMPRESA_ENDERECO_FK_ID_EMPRESA NOT NULL,
	LOGRADOURO VARCHAR(60) CONSTRAINT EMPRESA_ENDERECO_NN_LOGRADOURO NOT NULL,
	NUMERO INTEGER CONSTRAINT EMPRESA_ENDERECO_NN_NUMERO NOT NULL,
	COMPLEMENTO VARCHAR(20) CONSTRAINT EMPRESA_ENDERECO_NN_COMPLEMENTO,
	CEP VARCHAR(8) CONSTRAINT EMPRESA_ENDERECO_NN_CEP NOT NULL,
	LATITUDE NUMERIC(15,12) CONSTRAINT EMPRESA_ENDERECO_NN_LATITUDE,
	LONGITUDE NUMERIC(15,12) CONSTRAINT EMPRESA_ENDERECO_NN_LONGITUDE,
	ATIVO BOOL CONSTRAINT EMPRESA_ENDERECO_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID)
);

DROP TABLE IF EXISTS TERMINAL.TIPO_ACEITE;

CREATE TABLE TIPO_ACEITE (
	ID INTEGER CONSTRAINT TIPO_ACEITE_NN_ID PRIMARY KEY NOT NULL,
	DESCRICAO VARCHAR(50) CONSTRAINT TIPO_ACEITE_NN_DESCRICAO NOT NULL,
	ATIVO BOOL CONSTRAINT TIPO_ACEITE_NN_ATIVO NOT NULL
);

DROP TABLE IF EXISTS TERMINAL.OPERACAO_EVENTO;

CREATE TABLE OPERACAO_EVENTO (	
	ID INTEGER CONSTRAINT OPERACAO_EVENTO_PK_ID PRIMARY KEY NOT NULL,
	ID_OPERACAO INTEGER CONSTRAINT OPERACAO_EVENTO_PK_ID_OPERACAO NOT NULL,
	ID_EMPRESA_ENDERECO INTEGER CONSTRAINT OPERACAO_EVENTO_PK_ID_EMPRESA_ENDERECO NOT NULL,
	ID_ASSINATURA INTEGER CONSTRAINT OPERACAO_EVENTO_FK_ID_ASSINATURA,
	ID_TIPO_ACEITE INTEGER CONSTRAINT OPERACAO_EVENTO_NN_ID_TIPO_ACEITE NOT NULL,
	ID_TIPO_DOCUMENTO INTEGER,
	EVENTO CHAR(1) CONSTRAINT OPERACAO_EVENTO_NN_EVENTO NOT NULL,	
	DATA_PREVISTA DATETIME CONSTRAINT OPERACAO_EVENTO_NN_DATA_PREVISTA NOT NULL,
	DATA_REAL DATETIME CONSTRAINT OPERACAO_EVENTO_NN_DATA_REAL,
	DATA_GPS DATETIME CONSTRAINT OPERACAO_EVENTO_NN_DATA_GPS,
	DATA_NASC_RESPONSAVEL DATETIME,
	DOCUMENTO_RESPONSAVEL VARCHAR(20),
	NOME_RESPONSAVEL VARCHAR(50),
	LATITUDE_REAL NUMERIC(15,12),
	LONGITUDE_REAL NUMERIC(15,12),
	RAIO_LIMITE NUMERIC(4,0),
	CONCLUIDO BOOL CONSTRAINT OPERACAO_EVENTO_NN_CONCLUIDO,
	SOMENTE_RESPONSAVEIS BOOL CONSTRAINT OPERACAO_EVENTO_NN_SOMENTE_RESPONSAVEIS NOT NULL,
	VALIDAR_GPS BOOL CONSTRAINT OPERACAO_EVENTO_NN_VALIDAR_GPS NOT NULL,
	ATIVO BOOL CONSTRAINT OPERACAO_EVENTO_NN_ATIVO NOT NULL,
	CONSTRAINT OPERACAO_EVENTO_CK_EVENTO CHECK (EVENTO IN ('E','D','O')),
	FOREIGN KEY (ID_EMPRESA_ENDERECO) REFERENCES EMPRESA_ENDERECO(ID),
	FOREIGN KEY (ID_ASSINATURA) REFERENCES ASSINATURAS(ID),
	FOREIGN KEY (ID_OPERACAO) REFERENCES OPERACAO(ID),
	FOREIGN KEY (ID_TIPO_DOCUMENTO) REFERENCES TIPO_DOCUMENTO(ID),
	CONSTRAINT OPERACAO_EVENTO_FK_ID_TIPO_ACEITE FOREIGN KEY (ID_TIPO_ACEITE) REFERENCES TIPO_ACEITE (ID)
);

DROP TABLE IF EXISTS TERMINAL.ASSINATURA;

CREATE TABLE ASSINATURA(
	ID INTEGER CONSTRAINT ASSINATURAS_PK_ID PRIMARY KEY NOT NULL,
	ASSINATURA BLOB CONSTRAINT ASSINATURA_NN_ASSINATURA NOT NULL,
	ATIVO BOOL CONSTRAINT ASSINATURAS_NN_ATIVO NOT NULL
);

DROP TABLE IF EXISTS TERMINAL.DOCUMENTO_TRANSPORTE;

CREATE TABLE DOCUMENTO_TRANSPORTE (
  ID INTEGER CONSTRAINT DOCUMENTO_TRANSPORTE_PK_ID PRIMARY KEY NOT NULL,  
  NUMERO VARCHAR(20) CONSTRAINT DOCUMENTO_TRANSPORTE_NN_NUMERO NOT NULL,
  SERIE VARCHAR(3),
  ID_EMISSOR INTEGER CONSTRAINT DOCUMENTO_TRANSPORTE_FK_ID_EMISSOR NOT NULL,
  ID_DESTINATARIO INTEGER CONSTRAINT DOCUMENTO_TRANSPORTE_FK_ID_DESTINATARIO NOT NULL,
  ID_EMPRESA INTEGER CONSTRAINT DOCUMENTO_TRANSPORTE_FK_ID_EMPRESA NOT NULL,
  DATA_EMISSAO DATETIME CONSTRAINT DOCUMENTO_TRANSPORTE_NN_DATA_EMISSAO NOT NULL,
  TIPO VARCHAR(2) CONSTRAINT DOCUMENTO_TRANSPORTE_NN_TIPO NOT NULL,
  ATIVO BOOL CONSTRAINT DOCUMENTO_TRANSPORTE_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_EMISSOR) REFERENCES EMPRESA (ID),
  FOREIGN KEY (ID_DESTINATARIO) REFERENCES EMPRESA (ID),
  FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA(ID)
);

DROP TABLE IF EXISTS TERMINAL.DOCUMENTO_PRODUTO;

CREATE TABLE DOCUMENTO_PRODUTO (
  ID INTEGER CONSTRAINT DOCUMENTO_PRODUTO_PK_ID PRIMARY KEY NOT NULL,
  ID_DOCUMENTO_TRANSPORTE INTEGER CONSTRAINT DOCUMENTO_PRODUTO_FK_ID_DOCUMENTO_TRANSPORTE NOT NULL,
  ID_PRODUTO INTEGER CONSTRAINT DOCUMENTO_PRODUTO_FK_ID_PRODUTO NOT NULL,
  ATIVO BOOL CONSTRAINT DOCUMENTO_PRODUTO_NN_ATIVO NOT NULL,
  QUANTIDADE NUMERIC(15,4) CONSTRAINT DOCUMENTO_PRODUTO_NN_QUANTIDADE NOT NULL,
  VALOR NUMERIC(15,4) CONSTRAINT DOCUMENTO_PRODUTO_NN_VALOR NOT NULL,
  FOREIGN KEY (ID_DOCUMENTO_TRANSPORTE) REFERENCES DOCUMENTO_TRANSPORTE (ID),
  FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO (ID)
);

DROP TABLE IF EXISTS TERMINAL.PRODUTO;

CREATE TABLE PRODUTO (
  ID INTEGER CONSTRAINT PRODUTO_PK_ID PRIMARY KEY NOT NULL,
  ID_EMPRESA INTEGER CONSTRAINT PRODUTO_FK_ID_EMPRESA NOT NULL,
  DESCRICAO VARCHAR(50) CONSTRAINT PRODUTO_NN_DESCRICAO_PRODUTO NOT NULL,
  CODIGO VARCHAR(20) CONSTRAINT PRODUTO_NN_CODIGO NOT NULL,
  ATIVO BOOL CONSTRAINT PRODUTO_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID)
);

DROP TABLE IF EXISTS TERMINAL.OPERACAO_RESPONSAVEL;

CREATE TABLE OPERACAO_RESPONSAVEL (
  ID INTEGER CONSTRAINT OPERACAO_RESPONSAVEL_PK_ID PRIMARY KEY NOT NULL,
  ID_OPERACAO INTEGER CONSTRAINT OPERACAO_RESPONSAVEL_FK_ID_OPERACAO NOT NULL,
  ID_RESPONSAVEL INTEGER CONSTRAINT OPERACAO_RESPONSAVEL_FK_ID_RESPONSAVEL NOT NULL,
  ATIVO BOOL CONSTRAINT OPERACAO_RESPONSAVEL_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_OPERACAO) REFERENCES OPERACAO (ID),
  FOREIGN KEY (ID_RESPONSAVEL) REFERENCES RESPONSAVEL (ID)
);

DROP TABLE IF EXISTS TERMINAL.RESPONSAVEL;

CREATE TABLE RESPONSAVEL (
  ID INTEGER CONSTRAINT RESPONSAVEL_PK_ID PRIMARY KEY NOT NULL,
  ID_TIPO_DOCUMENTO INTEGER CONSTRAINT RESPONSAVEL_FK_ID_TIPO_DOCUMENTO,
  DOCUMENTO VARCHAR(50) CONSTRAINT RESPONSAVEL_NN_DOCUMENTO NOT NULL,
  NOME_RESPONSAVEL VARCHAR(50) CONSTRAINT RESPONSAVEL_NN_NOME_RESPONSAVEL NOT NULL,  
  SENHA VARCHAR(40),  
  ATIVO BOOL CONSTRAINT RESPONSAVEL_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_TIPO_DOCUMENTO) REFERENCES TIPO_DOCUMENTO (ID)
);

DROP TABLE IF EXISTS TERMINAL.CHECKLIST;

CREATE TABLE CHECKLIST (
  ID INTEGER CONSTRAINT CHECKLIST_PK_ID PRIMARY KEY NOT NULL,
  ID_OPERACAO INTEGER CONSTRAINT CHECKLIST_FK_ID_OPERACAO NOT NULL,
  TIPO_QUESTAO VARCHAR(1) CONSTRAINT CHECKLIST_NN_TIPO_QUESTAO NOT NULL,
  QUESTAO VARCHAR(50) CONSTRAINT CHECKLIST_NN_QUESTOES NOT NULL,
  RESPONDIDO BOOL,
  OBRIGATORIO BOOL CONSTRAINT CHECKLIST_NN_OBRIGATORIO NOT NULL,
  ATIVO BOOL CONSTRAINT CHECKLIST_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_OPERACAO) REFERENCES OPERACAO (ID)
);

DROP TABLE IF EXISTS TERMINAL.CHECKLIST_ALTERNATIVA;

CREATE TABLE CHECKLIST_ALTERNATIVA (
	ID INTEGER CONSTRAINT CHECKLIST_ALTERNATIVAS_PK_ID PRIMARY KEY NOT NULL,
	ID_CHECKLIST INTEGER CONSTRAINT CHECKLIST_ALTERNATIVAS_FK_ID_CHECKLIST NOT NULL,
	ALTERNATIVA VARCHAR(50) CONSTRAINT CHECKLIST_ALTERNATIVAS_NN_ATERNATIVA NOT NULL,
	SELECIONADA BOOL CONSTRAINT CHECKLIST_ALTERNATIVAS_NN_SELECIONADA NOT NULL,
	ATIVO BOOL CONSTRAINT CHECKLIST_ALTERNATIVAS_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_CHECKLIST) REFERENCES CHECKLIST (ID)
);

DROP TABLE IF EXISTS TERMINAL.CHECKLIST_RESPOSTA;

CREATE TABLE CHECKLIST_RESPOSTA (
	ID INTEGER CONSTRAINT CHECKLIST_RESPOSTAS_PK_ID PRIMARY KEY NOT NULL,
	ID_CHECKLIST INTEGER CONSTRAINT CHECKLIST_RESPOSTAS_FK_ID_CHECKLIST NOT NULL,
	ID_CHECKLIST_ALTERNATIVA INTEGER,
	RESPOSTA VARCHAR(200) CONSTRAINT CHECKLIST_RESPOSTAS_NN_ATERNATIVA NOT NULL,
	ATIVO BOOL CONSTRAINT CHECKLIST_RESPOSTAS_NN_ATIVO NOT NULL,
	FOREIGN KEY (ID_CHECKLIST) REFERENCES CHECKLIST (ID),
	FOREIGN KEY (ID_CHECKLIST_ALTERNATIVA) REFERENCES CHECKLIST_ALTERNATIVA (ID)
);

DROP TABLE IF EXISTS TERMINAL.EMPRESA;

CREATE TABLE EMPRESA (
  ID INTEGER CONSTRAINT EMPRESA_PK_ID PRIMARY KEY NOT NULL,
  ID_TIPO_DOCUMENTO INTEGER CONSTRAINT EMPRESA_FK_ID_TIPO_DOCUMENTO NOT NULL,
  EMPRESA VARCHAR(50) CONSTRAINT EMPRESA_NN_EMPRESA NOT NULL,
  TELEFONE VARCHAR(20) CONSTRAINT EMPRESA_NN_TELEFONE NULL,
  ENDERECO VARCHAR(50) CONSTRAINT EMPRESA_NN_ENDERECO NOT NULL,
  DOCUMENTO VARCHAR(50) CONSTRAINT EMPRESA_NN_DOCUMENTO NOT NULL,
  ATIVO BOOL CONSTRAINT EMPRESA_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_TIPO_DOCUMENTO) REFERENCES TIPO_DOCUMENTO (ID)
);

DROP TABLE IF EXISTS TERMINAL.USUARIO_EMPRESA;

CREATE TABLE USUARIO_EMPRESA (
  ID INTEGER CONSTRAINT USUARIO_EMPRESA_PK_ID PRIMARY KEY NOT NULL,
  ID_USUARIO INTEGER CONSTRAINT USUARIO_EMPRESA_FK_ID_USUARIO NOT NULL,
  ID_EMPRESA INTEGER CONSTRAINT USUARIO_EMPRESA_FK_ID_EMPRESA NOT NULL,
  ATIVO BOOL CONSTRAINT USUARIO_EMPRESA_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID),
  FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID)
);
	
DROP TABLE IF EXISTS TERMINAL.MENSAGENS_PRE_DEFINIDAS;

CREATE TABLE MENSAGENS_PRE_DEFINIDAS (
  ID INTEGER CONSTRAINT MENSAGENS_PRE_DEFINIDAS_PK_ID PRIMARY KEY NOT NULL,
  ID_EMPRESA INTEGER CONSTRAINT MENSAGENS_PRE_DEFINIDAS_FK_ID_EMPRESA NOT NULL,
  MENSAGEM VARCHAR(50) CONSTRAINT MENSAGENS_PRE_DEFINIDAS_NN_MENSAGEM NOT NULL,
  ATIVO BOOL CONSTRAINT USUARIO_EMPRESA_NN_ATIVO NOT NULL,
  FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID)
);

DROP TABLE IF EXISTS TERMINAL.LOG;

CREATE TABLE LOG (
  ID INTEGER CONSTRAINT LOG_PK_ID PRIMARY KEY NOT NULL,
  DATA INTEGER CONSTRAINT LOG_NN_DATA NOT NULL,
  MODULO VARCHAR(50) CONSTRAINT LOG_NN_MODULO NOT NULL,
  DESCRICAO VARCHAR(255) CONSTRAINT LOG_NN_DESCRICAO NOT NULL,
  STACK_TRACE VARCHAR(640) CONSTRAINT LOG_NN_STACK_TRACE NOT NULL,
  ERRO_EXCEPT INTEGER CONSTRAINT LOG_NN_ERRO_EXCEPT NOT NULL,
  ERRO_SISTEMA INTEGER CONSTRAINT LOG_NN_ERRO_SISTEMA NOT NULL,
  ERRO_SOCKET_LAST INTEGER CONSTRAINT LOG_NN_ERRO_SOCKET_LAST NOT NULL
);
